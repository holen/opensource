controller:
    keystone, glance
        glance: filesystem, /var/lib/glance/images
            image
    nova:
        # nova-compute
        nova-network
        nova-volume
        nova-scheduler
    Horizon

compute:
    nova-compute
    nova-network

object-store:
    swift

# 1. install keystone

1.1 install mysql 

    yum install mysql mysql-server -y
    service mysqld start
    chkconfig mysqld on
    getenforce

1.2 install identity service

    yum -y install openstack-utils openstack-keystone python-keystoneclient
    openstack-db --init --service keyston --pass keystone
    
    mysql -uroot -p
    mysql> GRANT all on keystone.* to 'KS_USER'@'%' IDENTIFIED BY 'PASSWORD';
    mysql> GRANT all on keystone.* to 'KS_USER'@'localhost' IDENTIFIED BY 'PASSWORD';
    mysql> show databases;
    mysql> show grants for 'keystone'@'%';
    mysql> show grants for 'keystone'@'localhost';

1.3 setting keystone conf

    vim /etc/keystone/keystone.con
    connection = mysql://keystone:keystone@localhost/keystone
                 mysql://[user]:[pass]@[primary ip]/[db name]

1.4 setting keystone token
    
    export SERVICE_TOKEN = $(openssl rand -hex 10)
    echo $SERVICE_TOKEN
    export SERVICE_ENDPOING=http://172.16.200.6:35357/v2.0
    echo $SERVICE_TOKEN > ~/.ks_admin_token
    
    openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token 'YOUR_ADMIN_TOKEN'
    or
    vim /etc/keystone/keystone.conf
    admin_toke = 'YOUR_ADMIN_TOKEN'

    service openstack-keystone start
    netstat -utnlp 
    grep -i error /var/log/keystone/keystone.log
    ps auxf | grep -i keystone

1.5 init keystone db

    keystone-manage db_sync

    mysql -uroot -p
    mysql> use keystone
    mysql> show tables;
    mysql> select * from token;
    mysql> DESC token;

1.6 setting keystone API endpoint(访问路径)

    keystone service-create --name=keystone --type=identity --description="Keystone Identity Service"
    keystone service-list
    keystone endpoint-create --service_id id \
        --publicurl 'http://172.16.200.6:5000/v2.0' \
        --adminurl 'http://172.16.200.6:35357/v2.0' \
        --internalurl 'http://172.16.200.6:5000/v2.0'
    keystone endpoint-list

    curl http://0.0.0.0:5000/ | python -mjson.tool
    curl http://0.0.0.0:5000/v2.0/ | python -mjson.tool
    curl http://0.0.0.0:35357/ | python -mjson.tool
    curl http://0.0.0.0:35357/v2.0/ | python -mjson.tool

2. user、role and tenant

2.1 keystone sub_command 

    keystone help SUB_COMMAND
    keystone help tenant-create

2.2 admin tenant

    keystone tenant-create --name admin --description "Admin Tenant"
    keystone role-create --name admin
    keystone user-create --name admin --tenant-id id pass admin --email admin@abc.com
    keystone user-role-add --user-id id --role-id id --tenant-id id
    keystone user-list
    keystone role-list

2.2.2 为admin用户启用基于credential的认证机制

    vim ~/.keystonerc_admin
    export OS_USERNAME=admin
    export OS_TENAT_NAME=admin
    export OS_PASSWORD=admin
    export OS_AUTH_URL=http://172.16.200.6.35357/v2.0/
    export PS1='[\u@\h \w(keystone_admin)]\$ '
    
    source ~/.keystonerc_admin

    unset SERVICE_TOKEN
    unset SERVICE_ENDPOINT

    keystone user-list
    keystone role-list

2.3 service tenant

    keystone tenant-create --name service --description "service Tenant"
    keystone user-create --tenant-id id --name nova --pass nova --email nova@abc.com
    keystone user-role-add --tenant-id id --user-id id --role-id id
    keystone user-list

# Openstack Image Service

2.1 install glance service

    yum -y install openstack-glance
    openstack-db --init --service glance --password glance
    mysql -uroot -p
    mysql> GRANT all on glance.* to 'GLANCE_USER'@'%' IDENTIFIED BY 'PASSWORD';
    mysql> GRANT all on glance.* to 'GLANCE_USER'@'localhost' IDENTIFIED BY 'PASSWORD';
    mysql> show databases;
    
    keystone user-create --tenant-id id --name glance --pass glance --email glance@abc.com
    keystone user-role-add --tenant-id id --user-id id --role-id id
    keystone user-list

2.1.3 setting glance api

    vim /etc/glance/glance-api.conf
    enable_v1_api = True
    enable_v2_api = True
    [keystone_authtoken]
    auth_host = 172.16.200.6
    auth_port = 35357
    auth_protocol = http
    admin_tenant_name = service
    admin_user = glance
    admin_password = glance
    [paste_deploy]
    config_file = /etc/glance/glance-api-paste.ini
    flavor=keystone
    sql_connection = mysql://glance:glance@localhost/glance
    if use swift, default is file
    default_store = swift
    swift_store_auth_address = http://172.16.200.6:5000/v2.0/
    swift_store_user = service:swift
    swift_store_key = 

2.1.4 setting glance-registry

    vim /etc/glance-registry.conf
    [keystone_authtoken]
    auth_host = 172.16.200.6
    auth_port = 35357
    auth_protocol = http
    admin_tenant_name = service
    admin_user = glance
    admin_password = glance
    [paste_deploy]
    config_file = /etc/glance/glance-registry-paste.ini
    flavor=keystone
    [pipeline:glance-registry-keystone]
    pipeline = authtoken context registryapp

2.1.5 start service

    service openstack-glance-api start
    chkconfig openstack-glance-api on

    service openstack-glance-registry start
    chkconfig openstack-glance-registry on
    glance-manage db_sync
    service openstack-glance-api restart
    service openstack-glance-registry restart

2.1.7   registry glance service on keystone

    keystone service-create --name=glance --type=image --description="Glance Image Service"
    keystone service-list
    keystone endpoint-create --service_id id \
        --publicurl 'http://172.16.200.6:9292/v2.0' \
        --adminurl 'http://172.16.200.6:35357/v2.0' \
        --internalurl 'http://172.16.200.6:9292/v2.0'
    keystone endpoint-list
    netstat -tunlp 
    glance image-list
    
2.2 Image manage

    glance image-create 
    glance image-update

2.2.3 get image

    CirrOS(test) image
    ubuntu
        http://uec-images.ubuntu.com

    glance image-create --name=cirros-0.3.0-i386 --disk-format=qcow2 --container-format=bare < /stackimage/cirros-0.3.0-i386-disk.img
    glance image-list
    ls /var/lib/glance/images/ -lh

# 3. nova 

3.1.1 set up eth0 promisc function

    ip link set eth0 promisc on

3.1.2 create br100

    chkconfig NetworkManager off
    chkconfig network on
    service NetworkManager stop
    servier network start
    yum install libvirt
    service libvirt start
    virsh iface-bridge eth0 br100

    vim /etc/sysconfig/network-scripts/ifcfg-br0
    DEVICE=br100
    BOOTPROTO=none
    DNS1=172.16.0.1
    GATEWAY=172.16.0.1
    IPADDR=172.16.200.6
    NETMASK=255.255.0.0
    NM_CONTROLLED=no
    ONBOOT=yes
    TYPE=Bridge
    USERCTL=no
    DELAY=0

    vim /etc/sysconfig/network-scripts/ifcfg-eth0
    DEVICE=eth0
    BOOTPROTO=none
    NM_CONTROLLED=no
    ONBOOT=yes
    TYPE=Ethernet
    IPv6INIT=no
    USERCTL=no
    BRIDGE=br100

3.1.3 install bridge-utils

    yum install bridge-utils
    brctl show

3.1.4 start messagbus

    service messagebus start
    chkconfig messagebus on 

3.2 install nova 

    yum install openstack-utils memcached qpid-cpp-server
    yum install openstack-nova
    openstack-db --init --service nova --pass nova
    mysql -uroot -p
    mysql> GRANT all on nova.* to 'NOVA_USER'@'%' IDENTIFIED BY 'PASSWORD';
    mysql> GRANT all on nova.* to 'NOVA_USER'@'localhost' IDENTIFIED BY 'PASSWORD';

3.3 setting nova

    vim /etc/nova/nova.conf
    [DEFAULT]
    auth_strategy=keystone
    # LOGS/STATE
    verbose=True
    logdir=/var/log/nova
    state_path=/var/lib/nova
    lock_path=/var/lock/nova
    rootwrap_config=/etc/nova/rootwrap.conf
    # SCHEDULER
    compute_scheduler_driver=nova.scheduler.filter_scheduler.FilterScheduler
    # VOLUMES
    volume_driver=nova.volume.driver.ISCSIDriver
    volume_group=nova-volume
    volume_name_template=volume-%08x
    iscsi_helper=tgtadm
    #DATABASE
    sql_connection=mysql://nova:nova@172.16.200.6/nova
    #COMPUTE
    libvirt-type=qemu
    compute_driver=libvirt.libvirtDriver
    instance_name_template=instance-%08x
    api_paste_config=/etc/nova/api-paste.ini

    # set the instances path
    # instance_pach=/nova/instanceso
    # new add
    libvirt_nonblocking = True
    libvirt_inject_partition = -1

    allow_resize_to_same_host=True
    # APIS
    osapi_compute_extension=nova.api.openstack.compute.contrib.standard_extensions
    ec2_dmz_host=172.16.200.6
    s3_host=172.16.200.6

    #Qpid
    rpc_backend = nova.openstack.common.rpc.impl_qpid
    qpid_hostname=172.16.200.6

    #Glance
    image_service=nova.image.glance.GlanceImageService
    glance_api_servers=172.16.200.6:9292

    #NETWORK
    network_manager=nova.network.manager.FlatDHCPManager
    force_dhcp_release=True
    dhcpbridge_flagfile=/etc/nova/nova.conf

    #New add
    dhcpbridge= /usr/bin/nova-dhcpbridge

    firewall_driver=nova.virt.libvirt.firewall.IptablesFirewallDriver
    # Change my_ip to match each Compute host
    my_ip=172.16.200.6
    public_interface=eth0
    vlan_interface=eth0
    flat_network_bridge=br100
    flat_interface=eth0
    fixed_range=172.16.200.0/24

    #NOVNC CONSOLE
    novncproxy_base_url=http://172.16.200.6:6080/vnc_auto.html
    vncserver_proxyclient_address=172.16.200.6
    vncserver_listen=172.16.200.6

    [keystone_authtoken]
    auth_host = 172.16.200.6
    auth_port = 35357
    auth_protocol = http
    admin_tenant_name = service
    admin_user = nova
    admin_password = nova

install libguestfs-tools

    yum -y install libguestfs-tool

setting libvirt type 

    openstack-config --set /etc/nova/nova.conf DEFAULT libvirt_type qemu

setting qemu-kvm
    
    ln -sv /usr/libexec/qemu-kvm /usr/bin/qemu

start libvirtd service    

    service libvirtd restart

3.3.2 sync nova db

    nova-manage db sync

3.3.3   install and setting qpid queue

    yum install -y qpid-cpp-server
    sed -i -e 's/auth=.*/auth=no/g' /etc/qpidd.conf
    service qpidd start
    chkconfig qpidd on

3.3.4 start nova

    mkdir /var/lock/nova
    chown -R nova.nova /var/lock/nova

    for svc in api compute network cert console scheduler; do service openstack-nova-$svc start; chkconfig openstack-nova-#svc on; done

    nova-manage service list 

3.3.5 create nova network

    nova-manage network create --help
    nova-manage network create --label=private --multi_host=T --fixed_range_v4=172.16.200.0/24 --bridge_interface=eth0 --bridge=br100 --num_networks=1 --network_size=256

    nova-manage network list

3.4 registry Nova compute API on KeyStone

    keystone service-create --name=nova --type=compute --description="Nova Compute Service"
    keystone service-list
    keystone endpoint-create --service_id id \
        --publicurl "http://172.16.200.6:8774/v1.1/\$(tenant_id)s' \
        --adminurl "http://172.16.200.6:8774/v1.1/\$(tenant_id)s" \
        --internalurl "http://172.16.200.6:8774/v1.1/\$(tenant_id)s"
    keystone endpoint-list
    nova image-list

# 4. run vm instance

4.1 security group

    nova secgroup-list
    nova secgroup-add-rule default tcp 22 22 0.0.0.0/0
    nova secgroup-add-rule default icmp -1 -1 0.0.0.0/0

4.2 SSH pub key 

    ssh-keygen -t rsa -P ''
    nova keypair-list
    nova keypair-add --pub-key .ssh/id_rsa.pub testkey
    nova keypair-list
    ssh-keygen -l -f .ssh/id_rsa.pub

4.3 run a instance

    nova flavor-list
    nova flavor-create name id ram disk vcpus 
    nova flavor-list
    nova image-list
    nova boot --flavor flavor-id --image image-id --key_name name --security_group default vm1
    nova list
    virsh list
    nova console-log vm1
    nova stop vm1

4.4 install another node nova compute

    ip link set eth0 promisc on
    ip link show eth0
    yum install libvirt
    service libvirtd start 
    chkconfig libvirtd on
    yum install qemu
    yum install libguestfs
    ln -sv /usr/libexec/qemu-kvm /usr/bin/qemu
    service libvirtd restart
    service NetworkManager stop
    virsh iface-bridge eth0 br100
    ifconfig
    yum install openstack-utls openstack-nova
    edit /etc/nova/nova.conf change IP
    mkdir /var/lock/nova
    chown -R nova.nova /var/lock/nova   
    service openstack-nova-compute start
    service openstack-nova-network start
    nova list
    source ~/.keystonerc_admin
    nova list
    nova-manage service list
    nova host-list
    nova start vm1
    nova list
    nova hypervisor list
    virsh list
    nova live-migration vm1 172.16.200.7 

# 5. object-store swift

5.1.1 Ring 

    account.ring
    container.ring
    object.ring

5.1.2 proxy-server

5.2 install swift

5.2.1 install swift 

    yum install openstack-utils openstack-swift-account openstack-swift-container openstack-swift-object xfsprogs python-keystone

5.2.2 XFS

    tree disk: /dev/sdb /dev/sdc /dev/sdd
    for PART in sdb1 sdc1 sdd1;do
        mkfs.xfs -i size=1024 /dev/$PART; \
        mkdir -p /srv/node/$PART; \
        echo "/dev/$PART /srv/node/$PART xfs noatime,nodiratime,nobarrier,logbufs=8 0 0" >> /etc/fstab; \
        mount /srv/node/$PART; \
        chown -R swift:swift /srv/node; 
    done

    for SVC in account container object; do service openstack-swift-$SVC start; chkconfig openstak-swift-$SVC on; done

5.3 install swift-proxy

    yum install openstack-swift-proxy memcached python-keystone openstack-utils python-keystoneclient

    service memcached start
    chkconfig memcached on

5.3.1 setting swift-proxy

    vim object-server.conf container-server.conf account-server.conf
    bind_ip = 172.16.200.8

    vim /etc/swift/proxy-server.conf
    memcache_servers = 172.16.200.8:11211
    admin_tenant_name = service 
    admin_user = swift
    admin_password = swift
    auth_host = 172.16.200.6
    auth_port = 35357
    auth_protocol = http

    source ~/.keystonerc_admin
    keystone role-list
    
    keystone user-create --name swift --tenant-id id --pass swift --email swift@abc.com
    keystone user-role-add --user-id id --role-id id --tenant-id id
    keystone user-role-list

5.3.2 create ring

    cd /etc/swift
    swift-ring-builder account.builder create 18 3 1 
    swift-ring-builder container.builder create 18 3 1 
    swift-ring-builder object.builder create 18 3 1 

5.3.3 关联ring

    cd /etc/swift

    swift-ring-builder account.builder add z1-172.16.200.8:6002/sdb1 100
    swift-ring-builder container.builder add z1-172.16.200.8:6001/sdb1 100
    swift-ring-builder object.builder add z1-172.16.200.8:6000/sdb1 100

    swift-ring-builder account.builder add z2-172.16.200.8:6002/sdc1 100
    swift-ring-builder container.builder add z2-172.16.200.8:6001/sdc1 100
    swift-ring-builder object.builder add z2-172.16.200.8:6000/sdc1 100

    swift-ring-builder account.builder add z3-172.16.200.8:6002/sdd1 100
    swift-ring-builder container.builder add z3-172.16.200.8:6001/sdd1 100
    swift-ring-builder object.builder add z3-172.16.200.8:6000/sdd1 100

    swift-ring-builder account.builder
    swift-ring-builder container.builder
    swift-ring-builder object.builder

    swift-ring-builder account.builder rebalance
    swift-ring-builder container.builder rebalance
    swift-ring-builder object.builder rebalance

    chown -R swift:swift /etc/swift
    service openstack-swift-proxy start

5.4 registry swift on keystone
    
    openstack-config --set /etc/swift/swift.conf swift-hast swift_hash_path_suffix ${openssl rand -hex 10)

    keystone service-create --name swift --type object-store --description="Swift Storage Service"
    keystone service-list
    keystone endpoint-create --service_id id \
        --publicurl "http://172.16.200.8:8080/v1/AUTH_\$(tenant_id)s' \
        --adminurl "http://172.16.200.8:8080/v1/AUTH_\$(tenant_id)s" \
        --internalurl "http://172.16.200.8:8080/v1/AUTH_\$(tenant_id)s"
    keystone endpoint-list

5.5 test swift

    swift -V 2.0 -A http://172.16.200.6:5000/v2.0 -U service:swift -K swift stat

5.6 upload file

    swift -V 2.0 -A http://172.16.200.6:5000/v2.0 -U service:swift -K swift upload testfile1 /etc/fstab
    swift -V 2.0 -A http://172.16.200.6:5000/v2.0 -U service:swift -K swift list
    source ~/.keystonerc_admin
    swift stat
    swift list
    swift download testfile1
    swift delete testfile1

    vim /etc/glance/glance-api.conf
    default_store = swift    
    swift_store_auth_address = 172.16.200.6:5000/v2.0/
    swift_store_user = swift:swift
    
# 6. Horizon

install Horizon

    yum install -y install python-memcached mod_swgi openstack-dashboard

    keystone role-create --name Member

    cd /etc/openstack-dashboard

    vim local_settings
    OPENSTACK_HOST = "172.16.200.6"
    OPENSTACK_KEYSTONE_DEFAULT_ROLE = "Member"
    CACHES = {
        'default': {
            'BACKEND' : 'django.core.cache.backends.memcached.MemcachedCache',
            'LOCATION': '127.0.0.1:11211',    
        }
    }

    SECRET_KEY = `openssl rand -hex 10`
    service httpd start
    service memcached start

    http://172.16.200.6/dashboard

